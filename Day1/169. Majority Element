### 이원호 ###

class Solution {
public:
    int majorityElement(vector<int>& nums)
    {
        sort(nums.begin(),nums.end());
        int z=1,h=1,hh=1;
        for(int i=1; i<nums.size(); i++)
        {
            if(nums[i]==nums[i-1])
            {
                z++;
                if(z>hh)
                {
                    h=nums[i];
                    hh=z;
                }
            }
            else
                z=1;
        }
        return h;
    }
};

### 강민수 
class Solution {
public:
    int majorityElement(vector<int>& nums) {
        int n = nums.size();
        sort(nums.begin(), nums.end());
        int cnt = 1;
        int k = nums[0];
        if (n == 1) return k;
        for(int i=1; i<n;i++){
            if(nums[i]==nums[i-1]){
                cnt++;
                if (cnt > n/2) return k;
            }
            else{
                cnt = 1;
                k = nums[i];
            }
        }
        return 0;
    }
    
};

Booye-Moore 알고리즘
public class Solution {
    public int majorityElement(int[] num) {

        int major=num[0], count = 1;
        for(int i=1; i<num.length;i++){
            if(count==0){
                count++;
                major=num[i];
            }else if(major==num[i]){
                count++;
            }else count--;
            
        }
        return major;
    }
}
시간 복잡도 O(n) 공간 복잡도 O(1)
