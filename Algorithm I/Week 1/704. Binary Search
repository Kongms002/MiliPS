### 강민수 풀이

class Solution {
public:
    int search(vector<int>& nums, int target) {
        int start = 0, end = nums.size() - 1;
        while (start < end) {
            int mid = (start + end) / 2;
            if (nums[mid] == target) return mid;
            else if (nums[mid] < target) start = mid + 1;
            else end = mid - 1;
        }
        return -1;
    }
};

Tp : O(log n)
Sp : O(1)

### 이원호 풀이 ###

class Solution {
public:
    int search(vector<int>& nums, int target)
    {
        int s=0,e=nums.size()-1;
        while(s<=e)
        {
            int mid=(s+e)/2;
            if(nums[mid]==target)
            {
                return mid;
            }
            else if(nums[mid]>target)
            {
                e=mid-1;
            }
            else
            {
                s=mid+1;
            }
        }
        if(nums.size()==1&&nums[0]==target)
            return 0;
        return -1;
    }
};

이분 탐색 이용, 완전히 정렬이였으면 시간복잡도 O(nlogn)인데 원소 하나 찾는것 이므로 O(logn)으로 해결됨
