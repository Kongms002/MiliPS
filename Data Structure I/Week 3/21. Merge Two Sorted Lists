## 강민수 풀이

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {
        ListNode* head;
        if (list2 == NULL) return list1;
        else if (list1 == NULL) return list2;

        int cur = 0;
        if(list1->val <= list2->val) {
            head = list1;
            cur = 1;
        }
        else {
            head = list2;
            cur = 2;
        }
        ListNode* t;

        while(list1 != NULL && list2 != NULL) {
            if (cur == 1) {
                t = list1 -> next;
                if (t == NULL || t->val > list2->val) {
                    list1->next = list2;
                    cur = 2;
                }
                list1 = t;
            }
            else {
                t = list2 -> next;
                if (t == NULL || t->val >= list1->val) {
                    list2->next = list1;
                    cur = 1;
                }
                list2 = t;
            } 
        }
        return head;
    }
};
